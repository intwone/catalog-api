// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/repositories/category_repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entities "github.com/intwone/catalog/internal/domain/entities"
)

// MockCategoryRepositoryInterface is a mock of CategoryRepositoryInterface interface.
type MockCategoryRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockCategoryRepositoryInterfaceMockRecorder
}

// MockCategoryRepositoryInterfaceMockRecorder is the mock recorder for MockCategoryRepositoryInterface.
type MockCategoryRepositoryInterfaceMockRecorder struct {
	mock *MockCategoryRepositoryInterface
}

// NewMockCategoryRepositoryInterface creates a new mock instance.
func NewMockCategoryRepositoryInterface(ctrl *gomock.Controller) *MockCategoryRepositoryInterface {
	mock := &MockCategoryRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockCategoryRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCategoryRepositoryInterface) EXPECT() *MockCategoryRepositoryInterfaceMockRecorder {
	return m.recorder
}

// GetByID mocks base method.
func (m *MockCategoryRepositoryInterface) GetByID(id string) (*entities.Category, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", id)
	ret0, _ := ret[0].(*entities.Category)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID.
func (mr *MockCategoryRepositoryInterfaceMockRecorder) GetByID(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockCategoryRepositoryInterface)(nil).GetByID), id)
}

// Save mocks base method.
func (m *MockCategoryRepositoryInterface) Save(arg0 entities.Category) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockCategoryRepositoryInterfaceMockRecorder) Save(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockCategoryRepositoryInterface)(nil).Save), arg0)
}
